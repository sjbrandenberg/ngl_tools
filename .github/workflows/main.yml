# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish to PyPI and TestPyPI

on: push
jobs:
  pypi-publish:
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ngl_tools
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Poetry configuration
        run: poetry config virtualenvs.create false
        
      - name: Install the project dependencies
        run: poetry install --sync --no-interaction
        
      - name: Build package
        run: poetry build
        
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  testpypi-publish:
    if: ${{ !startsWith(github.ref, 'refs/tags/')}} # only publish to PyPI on tag pushes
    name: Publish Python distribution to TestPyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/ngl_tools
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Update Version Number
        run: |
          OLD_VERSION=$(grep ^version pyproject.toml | cut -d '"' -f 2)
          OLD_VERSION="\"$OLD_VERSION\""
          NEW_VERSION="\"$GITHUB_REF_NAME\""
          sed -i "s+version = $OLD_VERSION+version = $NEW_VERSION+g" pyproject.toml
      - name: Poetry image
        uses: abatilo/actions-poetry@v2
      - name: Install the project dependencies
        run: poetry install
      - name: Build package
        run: poetry build
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
